.text
#define WAIT_CYCLES 500000

refresh_init:
    loadi r3 63
    loadi r4 $bot
    load r4 r4
    jmp $splash_draw_frame


splash_draw_frame:
    dec r3 r3
    jmp.z $splash_draw_frame_2
    store r3 r4
    jmp $splash_draw_frame

splash_draw_frame_2:
    loadi r4 $borders
    load r4 r4
    loadi r3 128
    store r3 r4
    loadi r3 191
    store r3 r4
    loadi r3 192
    store r3 r4
    loadi r3 255
    store r3 r4
    loadi r3 256
    store r3 r4
    loadi r3 319
    store r3 r4
splash_draw_frame_3:
    ; les coins
    inc r3 r3
    loadi r3 64
    loadi r4 $right_angle
    load r4 r4
    store r3 r4
    loadi r4 $left_angle
    load r4 r4
    loadi r3 127
    store r3 r4
    loadi r3 320
    store r3 r4
    loadi r4 $right_angle
    load r4 r4
    loadi r3 383
    store r3 r4
    inc r3 r3
    inc r3 r3
    loadi r4 $left_angle
    load r4 r4
    store r3 r4
    loadi r4 $top
    load r4 r4
    loadi r5 446


splash_draw_frame_4:
    inc r3 r3; le bord bas
    sub r6 r5 r3
    jmp.z $splash_draw_frame_5
    store r3 r4
    jmp $splash_draw_frame_4

splash_draw_frame_5:
    loadi r4 $right_angle
    load r4 r4
    store r3 r4
splash_draw_logo:
    loadi r4 $logo
    loadi r3 474
    call $write_msg
splash_draw_back:
    loadi r3 65
    loadi r4 $fill
    load r4 r4
    loadi r5 62
    call $draw_back_loop
    loadi r5 62
    loadi r3 129
    call $draw_back_loop
    loadi r5 62
    loadi r3 193
    call $draw_back_loop
    loadi r5 62
    loadi r3 257
    call $draw_back_loop
    loadi r5 62
    loadi r3 321
    call $draw_back_loop
    loadi r3 257
    loadi r4 $fill_ad
    load r4 r4
    loadi r5 62
    call $draw_back_loop
fin_splash_screen:

    loadi r3 262
    loadi r4 $splash_info
    call $write_msg
    loadi r3 198
    loadi r4 $splash_waiting5
    call $write_msg
    call $debut_boucle_1
    call $check_seconde_passee
    loadi r3 198
    loadi r4 $splash_waiting4
    call $write_msg
    call $debut_boucle_1
    call $debut_boucle_1
    loadi r3 198
    loadi r4 $splash_waiting3
    call $write_msg
    call $debut_boucle_1
    call $debut_boucle_1
    loadi r3 198
    loadi r4 $splash_waiting2
    call $write_msg
    call $debut_boucle_1
    call $debut_boucle_1
    call $debut_boucle_1
    loadi r3 198
    loadi r4 $splash_waiting1
    call $write_msg
    call $debut_boucle_1
    call $fetch_act_val
    jmp $refresh_reel


wait_for_stored:
    loadi r4 1026
    load r4 r4
    sub r4 r4 r1
    jmp.z $get_stored
    jmp $wait_for_stored

get_stored:
    loadi r4 1027
    load r4 r4
    mov r20 r4
    loadi r4 1028
    load r4 r4
    mov r21 r4
    loadi r4 1029
    load r4 r4
    mov r22 r4
    loadi r4 1030
    load r4 r4
    mov r23 r4
    loadi r4 1031
    load r4 r4
    add r4 r4 r1
    mov r24 r4
    loadi r4 1032
    load r4 r4
    mov r25 r4
    loadi r4 1033
    load r4 r4
    mov r26 r4
    call $compute_modulos
    ret

; input in r25 and r20
; mod(int a, int b)
; return (a % b) in rout
mod:
    div     rout    r25     r20
    mul     rout    rout    r20
    sub     rout    r25     rout
    ret

compute_modulos:
    push    rout
    push    r20

    loadi   r20     400
    call    $mod
    loadi   r20     $year_mod_400
    store   r20     rout

    loadi   r20     100
    call    $mod
    loadi   r20     $year_mod_100
    store   r20     rout

    loadi   r20     4
    call    $mod
    loadi   r20     $year_mod_4
    store   r20     rout

    pop     r20
    pop     rout
    ret

fetch_act_val:
    loadi r4 1025
    loadi r3 1
    store r4 r3
    jmp $wait_for_stored

debut_boucle_1:
    loadi r11 WAIT_CYCLES
boucle_1:
    dec r11 r11
    jmp.z $fin_boucle_1
    jmp $boucle_1
fin_boucle_1:
    ret

check_seconde_passee:
    loadi r12 1024
    load r12 r12
    add r12 r0 r12
    jmp.z $pas_seconde_passee
    loadi r12 1024
    store r12 r0
    add r20 r20 r1
pas_seconde_passee:
    ret


refresh_reel:
    loadi r3 63
    loadi r4 $bot
    load r4 r4
    jmp $draw_frame

draw_frame:
    dec r3 r3
    jmp.z $draw_frame_2
    store r3 r4
    jmp $draw_frame

draw_frame_2:
    loadi r4 $borders
    load r4 r4
    loadi r3 128
    store r3 r4
    loadi r3 191
    store r3 r4
    loadi r3 192
    store r3 r4
    loadi r3 255
    store r3 r4
    loadi r3 256
    store r3 r4
    loadi r3 319
    store r3 r4
draw_frame_3:
    ; les coins
    inc r3 r3
    loadi r3 64
    loadi r4 $right_angle
    load r4 r4
    store r3 r4
    loadi r4 $left_angle
    load r4 r4
    loadi r3 127
    store r3 r4
    loadi r3 320
    store r3 r4
    loadi r4 $right_angle
    load r4 r4
    loadi r3 383
    store r3 r4
    inc r3 r3
    inc r3 r3
    loadi r4 $left_angle
    load r4 r4
    store r3 r4
    loadi r4 $top
    load r4 r4
    loadi r5 446


draw_frame_4:
    inc r3 r3; le bord bas
    sub r6 r5 r3
    jmp.z $draw_frame_5
    store r3 r4
    jmp $draw_frame_4

draw_frame_5:
    loadi r4 $right_angle
    load r4 r4
    store r3 r4
draw_logo:
    loadi r4 $logo
    loadi r3 474
    call $write_msg

draw_back:
    loadi r3 65
    loadi r4 $fill
    load r4 r4
    loadi r5 62
    call $draw_back_loop
    loadi r5 62
    loadi r3 129
    call $draw_back_loop
    loadi r5 62
    loadi r3 193
    call $draw_back_loop
    loadi r5 62
    loadi r3 257
    call $draw_back_loop
    loadi r5 62
    loadi r3 321
    call $draw_back_loop
    call $new_ad
    call $draw_delimiteur
    call $draw_yrs
    call $draw_mnths
    call $draw_days
    call $draw_hrs
    call $draw_min
    call $draw_sec
    jmp $loop

draw_delimiteur:
    loadi r4 $dc
    load r4 r4
    loadi r3 220
    store r3 r4
    loadi r3 223
    store r3 r4
    loadi r4 $right_angle
    load r4 r4
    loadi r3 119
    store r3 r4
    loadi r3 122
    store r3 r4
    ret
draw_back_loop:
    test r5
    jmp.z $draw_back_loop_fin
    dec r5 r5
    store r3 r4
    inc r3 r3
    jmp $draw_back_loop

draw_back_loop_fin:
    ret

write_msg:
    load r5 r4
    test r5
    jmp.z $fin_msg
    store r3 r5
    inc r3 r3
    inc r4 r4
    jmp $write_msg

fin_msg:
    ret


draw_int: ;argument dans r5
    loadi r4 $int_to_str
    add r4 r4 r5
    add r4 r4 r5
    add r4 r4 r5
    call $write_msg
    ret


draw_yrs:
    loadi r3 123
    loadi r4 1000
    mov r6 r25
    div rout r25 r4
    loadi r4 $int_yr
    add r4 r4 rout
    add r4 r4 rout
    call $write_msg

    mov r25 r6
    loadi r3 124
    loadi r5 100
    div rout r25 r5
    mov r25 rout
    loadi r20 10
    call $mod
    loadi r4 $int_yr
    add r4 r4 rout
    add r4 r4 rout
    call $write_msg

    mov r25 r6
    loadi r3 125
    loadi r5 10
    div rout r25 r5
    mov r25 rout
    loadi r20 10
    call $mod
    loadi r4 $int_yr
    add r4 r4 rout
    add r4 r4 rout
    call $write_msg

    mov r25 r6
    loadi r3 126
    loadi r20 10
    call $mod
    loadi r4 $int_yr
    add r4 r4 rout
    add r4 r4 rout
    call $write_msg
    mov r25 r6
    ret
draw_mnths:
    mov r5 r24
    loadi r3 120
    call $draw_int
    ret

draw_days:
    mov r5 r23
    loadi r3 117
    call $draw_int
    call $load_day_week
    ret

draw_hrs:
    mov r5 r22
    loadi r3 218
    call $draw_int
    ret

draw_min:
    mov r5 r21
    loadi r3 221
    call $draw_int
    ret

draw_sec:
    mov r5 r20
    loadi r3 224
    call $draw_int
    ret


refresh_sec:
    call $draw_sec
    jmp $loop
refresh_min:
#ifndef FAST_FORWARD
    call $new_ad
#endif
    call $draw_sec
    call $draw_min
    jmp $loop
refresh_hour:
    call $draw_sec
    call $draw_min
    call $draw_hrs
    jmp $loop
refresh_day:
#ifdef FAST_FORWARD
    call $new_ad
#endif
    call $draw_sec
    call $draw_min
    call $draw_hrs
    call $draw_days
    jmp $loop
refresh_month:
    call $draw_sec
    call $draw_min
    call $draw_hrs
    call $draw_days
    call $draw_mnths
    jmp $loop
refresh_year:
    call $draw_sec
    call $draw_min
    call $draw_hrs
    call $draw_days
    call $draw_mnths
    call $draw_yrs
    jmp $loop


display_ad:
    loadi r3 257
    loadi r4 $fill_ad
    load r4 r4
    loadi r5 62
    call $draw_back_loop
    loadi r3 257
    mov r4 r6
    call $write_msg
    ret

display_ad1:
    loadi r6 $ad1
    call $display_ad
    ret
display_ad2:
    loadi r6 $ad2
    call $display_ad
    ret
display_ad3:
    loadi r6 $ad3
    call $display_ad
    ret
display_ad4:
    loadi r6 $ad4
    call $display_ad
    ret
display_ad5:
    loadi r6 $ad5
    call $display_ad
    ret
display_ad6:
    loadi r6 $ad6
    call $display_ad
    ret
display_ad7:
    loadi r6 $ad7
    call $display_ad
    ret
display_ad8:
    loadi r6 $ad8
    call $display_ad
    ret

new_ad:
    loadi r4 1034
    store r4 r1
    dec r10 r10
    jmp.z $reset_ad
    loadi r5 8
    sub r6 r5 r10
    jmp.z $display_ad8
    loadi r5 7
    sub r6 r5 r10
    jmp.z $display_ad7
    loadi r5 6
    sub r6 r5 r10
    jmp.z $display_ad6
    loadi r5 5
    sub r6 r5 r10
    jmp.z $display_ad5
    loadi r5 4
    sub r6 r5 r10
    jmp.z $display_ad4
    loadi r5 3
    sub r6 r5 r10
    jmp.z $display_ad3
    loadi r5 2
    sub r6 r5 r10
    jmp.z $display_ad2
    jmp $display_ad1


load_day_week:
    loadi r4 $day_in_the_week
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    add r4 r26 r4
    loadi r3 80
    call $write_msg
    ret

reset_ad:
    loadi r10 9
    jmp $new_ad
.data
splash_info: .zstring #bold(#textcolor(red,"Devenez premium++ et passez la queue directement !"))
splash_waiting5: .zstring #bold(#textcolor(yellow,"Vous etes ")+#textcolor(red,"5eme")+#textcolor(yellow, " dans la file d'attente..."))
splash_waiting4: .zstring #bold(#textcolor(yellow,"Vous etes ")+#textcolor(red,"4eme")+#textcolor(yellow, " dans la file d'attente..."))
splash_waiting3: .zstring #bold(#textcolor(yellow,"Vous etes ")+#textcolor(red,"3eme")+#textcolor(yellow, " dans la file d'attente..."))
splash_waiting2: .zstring #bold(#textcolor(yellow,"Vous etes ")+#textcolor(red,"2eme")+#textcolor(yellow, " dans la file d'attente..."))
splash_waiting1: .zstring #bold(#textcolor(yellow,"Vous etes ")+#textcolor(red,"1er")+#textcolor(yellow, " dans la file d'attente..."))
dc: .zstring #italic(#bold(#textcolor(red,":")))
top: .zstring #italic(#bold(#textcolor(red,"_")))
bot: .zstring #backcolor(default,#italic(#bold(#textcolor(red,"_"))))
right_angle: .zstring #bold(#italic(#textcolor(red, "/")))
left_angle: .zstring #bold(#italic(#textcolor(red, "\\")))
borders: .zstring #bold(#italic(#textcolor(red,"|")))
logo: .zstring #italic(#backcolor(blue,#textcolor(cyan," CPUlm ")) + #backcolor(brightyellow,#textcolor(magenta,#italic(" Gold Edition "))))
fill: .zstring #backcolor(black," ")
ad1: .zstring #backcolor(red,#textcolor(black,#italic("Marre des pubs ? Devenez Premium !")))
ad2: .zstring #backcolor(red,#textcolor(black,#italic("CPUlm Now bientot disponible: Votre CPU dans le cloud !")))
ad3: .zstring #backcolor(red,#textcolor(black,#italic("CPUlm La montre toujours en avance")))
ad4: .zstring #backcolor(red,#textcolor(black,#italic("AdopteUnCpu.com, trouve les CPUs les plus chauds de la region.")))
ad5: .zstring #backcolor(red,#textcolor(black,#italic("Qu est-ce qui est jaune et qui vous attend ? Lidl !")))
ad6: .zstring #backcolor(red,#textcolor(black,#italic("Merci a la DGSE d'avoir sponsorise le projet !")))
ad7: .zstring #backcolor(red,#textcolor(black,#italic("[NEWS]AMD se retire du marche face au CPUlm XM-11 !")))
ad8: .zstring #backcolor(red,#textcolor(black,#italic("Souscrivez a CPUnlock pour debloquer l affichage de l annee.")))
fill_ad: .zstring #backcolor(red," ")
todo: .zstring #italic(#backcolor(black,#textcolor(red,"2024")))
day_in_the_week:
    .zstring #italic(#backcolor(black,#textcolor(red,"Montag    ")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Dienstag  ")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Mittwoch  ")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Donnerstag")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Freitag   ")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Samstag   ")))
    .zstring #italic(#backcolor(black,#textcolor(red,"Sonntag   ")))
int_yr:
.zstring #italic(#backcolor(black,#textcolor(red,"0")))
.zstring #italic(#backcolor(black,#textcolor(red,"1")))
.zstring #italic(#backcolor(black,#textcolor(red,"2")))
.zstring #italic(#backcolor(black,#textcolor(red,"3")))
.zstring #italic(#backcolor(black,#textcolor(red,"4")))
.zstring #italic(#backcolor(black,#textcolor(red,"5")))
.zstring #italic(#backcolor(black,#textcolor(red,"6")))
.zstring #italic(#backcolor(black,#textcolor(red,"7")))
.zstring #italic(#backcolor(black,#textcolor(red,"8")))
.zstring #italic(#backcolor(black,#textcolor(red,"9")))
int_to_str:
 .zstring #italic(#backcolor(black,#textcolor(red,"00")))
 .zstring #italic(#backcolor(black,#textcolor(red,"01")))
 .zstring #italic(#backcolor(black,#textcolor(red,"02")))
 .zstring #italic(#backcolor(black,#textcolor(red,"03")))
 .zstring #italic(#backcolor(black,#textcolor(red,"04")))
 .zstring #italic(#backcolor(black,#textcolor(red,"05")))
 .zstring #italic(#backcolor(black,#textcolor(red,"06")))
 .zstring #italic(#backcolor(black,#textcolor(red,"07")))
 .zstring #italic(#backcolor(black,#textcolor(red,"08")))
 .zstring #italic(#backcolor(black,#textcolor(red,"09")))
 .zstring #italic(#backcolor(black,#textcolor(red,"10")))
 .zstring #italic(#backcolor(black,#textcolor(red,"11")))
 .zstring #italic(#backcolor(black,#textcolor(red,"12")))
 .zstring #italic(#backcolor(black,#textcolor(red,"13")))
 .zstring #italic(#backcolor(black,#textcolor(red,"14")))
 .zstring #italic(#backcolor(black,#textcolor(red,"15")))
 .zstring #italic(#backcolor(black,#textcolor(red,"16")))
 .zstring #italic(#backcolor(black,#textcolor(red,"17")))
 .zstring #italic(#backcolor(black,#textcolor(red,"18")))
 .zstring #italic(#backcolor(black,#textcolor(red,"19")))
 .zstring #italic(#backcolor(black,#textcolor(red,"20")))
 .zstring #italic(#backcolor(black,#textcolor(red,"21")))
 .zstring #italic(#backcolor(black,#textcolor(red,"22")))
 .zstring #italic(#backcolor(black,#textcolor(red,"23")))
 .zstring #italic(#backcolor(black,#textcolor(red,"24")))
 .zstring #italic(#backcolor(black,#textcolor(red,"25")))
 .zstring #italic(#backcolor(black,#textcolor(red,"26")))
 .zstring #italic(#backcolor(black,#textcolor(red,"27")))
 .zstring #italic(#backcolor(black,#textcolor(red,"28")))
 .zstring #italic(#backcolor(black,#textcolor(red,"29")))
 .zstring #italic(#backcolor(black,#textcolor(red,"30")))
 .zstring #italic(#backcolor(black,#textcolor(red,"31")))
 .zstring #italic(#backcolor(black,#textcolor(red,"32")))
 .zstring #italic(#backcolor(black,#textcolor(red,"33")))
 .zstring #italic(#backcolor(black,#textcolor(red,"34")))
 .zstring #italic(#backcolor(black,#textcolor(red,"35")))
 .zstring #italic(#backcolor(black,#textcolor(red,"36")))
 .zstring #italic(#backcolor(black,#textcolor(red,"37")))
 .zstring #italic(#backcolor(black,#textcolor(red,"38")))
 .zstring #italic(#backcolor(black,#textcolor(red,"39")))
 .zstring #italic(#backcolor(black,#textcolor(red,"40")))
 .zstring #italic(#backcolor(black,#textcolor(red,"41")))
 .zstring #italic(#backcolor(black,#textcolor(red,"42")))
 .zstring #italic(#backcolor(black,#textcolor(red,"43")))
 .zstring #italic(#backcolor(black,#textcolor(red,"44")))
 .zstring #italic(#backcolor(black,#textcolor(red,"45")))
 .zstring #italic(#backcolor(black,#textcolor(red,"46")))
 .zstring #italic(#backcolor(black,#textcolor(red,"47")))
 .zstring #italic(#backcolor(black,#textcolor(red,"48")))
 .zstring #italic(#backcolor(black,#textcolor(red,"49")))
 .zstring #italic(#backcolor(black,#textcolor(red,"50")))
 .zstring #italic(#backcolor(black,#textcolor(red,"51")))
 .zstring #italic(#backcolor(black,#textcolor(red,"52")))
 .zstring #italic(#backcolor(black,#textcolor(red,"53")))
 .zstring #italic(#backcolor(black,#textcolor(red,"54")))
 .zstring #italic(#backcolor(black,#textcolor(red,"55")))
 .zstring #italic(#backcolor(black,#textcolor(red,"56")))
 .zstring #italic(#backcolor(black,#textcolor(red,"57")))
 .zstring #italic(#backcolor(black,#textcolor(red,"58")))
 .zstring #italic(#backcolor(black,#textcolor(red,"59")))
 .zstring #italic(#backcolor(black,#textcolor(red,"60")))
 .zstring #italic(#backcolor(black,#textcolor(red,"XX")))